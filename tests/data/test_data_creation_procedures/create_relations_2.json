[
    {
        "op": "core/column-removal",
        "columnName": "resourceMetadata",
        "description": "Remove column ``resourceMetadata``"
    },
    {
        "op": "core/row-removal",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "resource_ID",
                    "expression": "grel:filter(row.columnNames,cn,isNonBlank(cells[cn].value)).length()>1",
                    "columnName": "resource_ID",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": false,
                                "l": "false"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "record-based"
        },
        "description": "Remove rows with no data"
    },
    {
        "op": "core/multivalued-cell-split",
        "columnName": "usage_data_ID",
        "keyColumnName": "resource_ID",
        "mode": "separator",
        "separator": "\\}\\|+\\{",
        "regex": true,
        "description": "Split cells in column ``usage_data_ID`` into new rows at outward facing curly braces with pipes between them"
    },
    {
        "op": "core/multivalued-cell-split",
        "columnName": "resourcePlatforms",
        "keyColumnName": "resource_ID",
        "mode": "separator",
        "separator": "\\}\\|+\\{",
        "regex": true,
        "description": "Split cells in column ``resourcePlatforms`` into new rows at outward facing curly braces with pipes between them"
    },
    {
        "op": "core/multivalued-cell-split",
        "columnName": "usageData",
        "keyColumnName": "resource_ID",
        "mode": "separator",
        "separator": "\\}\\|+\\{",
        "regex": true,
        "description": "Split cells in column ``usageData`` into new rows at outward facing curly braces with pipes between them"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "usage_data_ID",
        "expression": "value.toNumber()",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10,
        "description": "Change values in column ``usage_data_ID`` to number data type"
    },
    {
        "op": "core/fill-down",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "resource_ID",
        "description": "Fill down cells in column ``resource_ID``"
    },
    {
        "op": "core/column-addition",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "baseColumnName": "resourcePlatforms",
        "expression": "grel:cells.resource_ID.value+\"||\"+value",
        "onError": "set-to-blank",
        "newColumnName": "reorder_resourcePlatforms",
        "columnInsertIndex": 0,
        "description": "Create column ``reorder_resourcePlatforms`` with the value of ``resource_ID``, two pipes, and the value of ``resourcePlatforms``"
    },
    {
        "op": "core/row-reorder",
        "mode": "record-based",
        "sorting": {
            "criteria": [
                {
                    "valueType": "string",
                    "column": "reorder_resourcePlatforms",
                    "blankPosition": 2,
                    "errorPosition": 1,
                    "reverse": false,
                    "caseSensitive": false
                }
            ]
        },
        "description": "Reorder rows based on ``reorder_resourcePlatforms``"
    },
    {
        "op": "core/blank-down",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "reorder_resourcePlatforms",
        "description": "Blank down cells in column ``reorder_resourcePlatforms``"
    },
    {
        "op": "core/row-reorder",
        "mode": "record-based",
        "sorting": {
            "criteria": [
                {
                    "valueType": "number",
                    "column": "usage_data_ID",
                    "blankPosition": 2,
                    "errorPosition": 1,
                    "reverse": false
                }
            ]
        },
        "description": "Reorder records based on highest value in ``usage_data_ID``"
    },
    {
        "op": "core/column-addition",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "baseColumnName": "reorder_resourcePlatforms",
        "expression": "grel:if(row.index-row.record.fromRowIndex==0,row.record.index,null)",
        "onError": "set-to-blank",
        "newColumnName": "resource_platform_ID",
        "columnInsertIndex": 0,
        "description": "Create column ``resource_platform_ID`` with the record number to serve as the primary key"
    },
    {
        "op": "core/column-removal",
        "columnName": "reorder_resourcePlatforms",
        "description": "Remove column ``reorder_resourcePlatforms``"
    },
    {
        "op": "core/multivalued-cell-join",
        "columnName": "usage_data_ID",
        "keyColumnName": "resource_platform_ID",
        "separator": "}|{",
        "description": "Combine all values in record in column ``usage_data_ID`` in the first row of the record separated by `}|{`"
    },
    {
        "op": "core/multivalued-cell-join",
        "columnName": "usageData",
        "keyColumnName": "resource_platform_ID",
        "separator": "}|{",
        "description": "Combine all values in record in column ``usageData`` in the first row of the record separated by `}|{`"
    },
    {
        "op": "core/row-removal",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "resource_platform_ID",
                    "expression": "grel:and(row.record.cells[\"resource_ID\"].value[0]==row.record.cells[\"resource_ID\"].value[row.index-row.record.fromRowIndex],row.record.cells[\"resourcePlatforms\"].value[0]==row.record.cells[\"resourcePlatforms\"].value[row.index-row.record.fromRowIndex],filter(row.columnNames,cn,isNonBlank(cells[cn].value)).join(\"|\")==\"resource_ID|resourcePlatforms\")",
                    "columnName": "resource_platform_ID",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": true,
                                "l": "true"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "row-based"
        },
        "description": "Remove rows containing only duplicate data"
    },
    {
        "op": "core/column-split",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "resourcePlatforms",
        "guessCellType": false,
        "removeOriginalColumn": true,
        "mode": "separator",
        "separator": "]|[",
        "regex": false,
        "maxColumns": 0,
        "description": "Split column ``resourcePlatforms`` into new columns at each `]|[`"
    },
    {
        "op": "core/column-rename",
        "oldColumnName": "resourcePlatforms 1",
        "newColumnName": "Publisher",
        "description": "Rename column ``resourcePlatforms 1`` to ``Publisher``"
    },
    {
        "op": "core/column-rename",
        "oldColumnName": "resourcePlatforms 2",
        "newColumnName": "Publisher_ID",
        "description": "Rename column ``resourcePlatforms 2`` to ``Publisher_ID``"
    },
    {
        "op": "core/column-rename",
        "oldColumnName": "resourcePlatforms 3",
        "newColumnName": "Platform",
        "description": "Rename column ``resourcePlatforms 3`` to ``Platform``"
    },
    {
        "op": "core/column-rename",
        "oldColumnName": "resourcePlatforms 4",
        "newColumnName": "Proprietary_ID",
        "description": "Rename column ``resourcePlatforms 4`` to ``Proprietary_ID``"
    },
    {
        "op": "core/column-rename",
        "oldColumnName": "resourcePlatforms 5",
        "newColumnName": "URI",
        "description": "Rename column ``resourcePlatforms 5`` to ``URI``"
    },
    {
        "op": "core/column-rename",
        "oldColumnName": "resourcePlatforms 6",
        "newColumnName": "Publication_Date",
        "description": "Rename column ``resourcePlatforms 6`` to ``Publication_Date``"
    },
    {
        "op": "core/column-rename",
        "oldColumnName": "resourcePlatforms 7",
        "newColumnName": "Article_Version",
        "description": "Rename column ``resourcePlatforms 7`` to ``Article_Version``"
    },
    {
        "op": "core/column-rename",
        "oldColumnName": "resourcePlatforms 8",
        "newColumnName": "Statistics_Source_ID",
        "description": "Rename column ``resourcePlatforms 8`` to ``Statistics_Source_ID``"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "Publisher",
        "expression": "grel:if(value==\"`None`\",null,\"\\\"\"+value.replace(\"\\\"\",\"\\\\\\\"\")+\"\\\"\")",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10,
        "description": "Either replace null placeholder with null or handle enclosing and escaping quotes for values in column ``Publisher``"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "Publisher_ID",
        "expression": "grel:if(value==\"`None`\",null,\"\\\"\"+value.replace(\"\\\"\",\"\\\\\\\"\")+\"\\\"\")",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10,
        "description": "Either replace null placeholder with null or handle enclosing and escaping quotes for values in column ``Publisher_ID``"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "Platform",
        "expression": "grel:if(value==\"`None`\",null,\"\\\"\"+value.replace(\"\\\"\",\"\\\\\\\"\")+\"\\\"\")",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10,
        "description": "Either replace null placeholder with null or handle enclosing and escaping quotes for values in column ``Platform``"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "Proprietary_ID",
        "expression": "grel:if(value==\"`None`\",null,\"\\\"\"+value.replace(\"\\\"\",\"\\\\\\\"\")+\"\\\"\")",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10,
        "description": "Either replace null placeholder with null or handle enclosing and escaping quotes for values in column ``Proprietary_ID``"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "URI",
        "expression": "grel:if(value==\"`None`\",null,\"\\\"\"+value.replace(\"\\\"\",\"\\\\\\\"\")+\"\\\"\")",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10,
        "description": "Either replace null placeholder with null or handle enclosing and escaping quotes for values in column ``URI`"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "Publication_Date",
        "expression": "grel:if(value==\"`None`\",null,\"\\\"\"+value.replace(\"\\\"\",\"\\\\\\\"\")+\"\\\"\")",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10,
        "description": "Either replace null placeholder with null or handle enclosing and escaping quotes for values in column ``Publication_Date``"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "Article_Version",
        "expression": "grel:if(value==\"`None`\",null,\"\\\"\"+value.replace(\"\\\"\",\"\\\\\\\"\")+\"\\\"\")",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10,
        "description": "Either replace null placeholder with null or handle enclosing and escaping quotes for values in column ``Article_Version``"
    },
    {
        "op": "core/column-addition",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "baseColumnName": "Publisher",
        "expression": "join ([coalesce(cells['Publisher'].value,'None'),coalesce(cells['Publisher_ID'].value,'None'),coalesce(cells['Platform'].value,'None'),coalesce(cells['Proprietary_ID'].value,'None'),coalesce(cells['URI'].value,'None'),coalesce(cells['Publication_Date'].value,'None'),coalesce(cells['Article_Version'].value,'None'),coalesce(cells['Statistics_Source_ID'].value,'None'),coalesce(cells['resource_ID'].value,'None')],', ')",
        "onError": "keep-original",
        "newColumnName": "resourcePlatforms",
        "columnInsertIndex": 4,
        "description": "Create column ``resourcePlatforms`` by combining all the fields that will be used in the resourcePlatforms relation"
    },
    {
        "op": "core/column-reorder",
        "columnNames": [
            "resource_platform_ID",
            "resourcePlatforms",
            "usage_data_ID",
            "usageData"
        ],
        "description": "Reorder columns"
    }
]