[
    {
        "op": "core/column-addition",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "baseColumnName": "Statistics_Source_ID",
        "expression": "grel:row.record.index",
        "onError": "set-to-blank",
        "newColumnName": "usage_data_ID",
        "columnInsertIndex": 0,
        "description": "Create column ``usage_data_ID`` containing row number"
    },
    {
        "op": "core/column-addition",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "baseColumnName": "ISBN",
        "expression": "grel:if(value==cells.Parent_ISBN.value,null,value)",
        "onError": "set-to-blank",
        "newColumnName": "dedupe_ISBN",
        "columnInsertIndex": 9,
        "description": "Create column ``dedupe_ISBN`` with the value from ``ISBN`` unless it's the same as the row's value in ``Parent_ISBN``"
    },
    {
        "op": "core/column-addition",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "baseColumnName": "Print_ISSN",
        "expression": "grel:if(value==cells.Parent_Print_ISSN.value,null,value)",
        "onError": "set-to-blank",
        "newColumnName": "dedupe_Print_ISSN",
        "columnInsertIndex": 9,
        "description": "Create column ``dedupe_Print_ISSN`` with the value from ``Print_ISSN`` unless it's the same as the row's value in ``Parent_Print_ISSN``"
    },
    {
        "op": "core/column-addition",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "baseColumnName": "Online_ISSN",
        "expression": "grel:if(value==cells.Parent_Online_ISSN.value,null,value)",
        "onError": "set-to-blank",
        "newColumnName": "dedupe_Online_ISSN",
        "columnInsertIndex": 9,
        "description": "Create column ``dedupe_Online_ISSN`` with the value from ``Online_ISSN`` unless it's the same as the row's value in ``Parent_Online_ISSN``"
    },
    {
        "op": "core/column-addition",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "baseColumnName": "Metric_Type",
        "expression": "join ([coalesce(cells['Metric_Type'].value,'`None`'),coalesce(cells['Usage_Date'].value,'`None`'),coalesce(cells['Usage_Count'].value,'`None`'),coalesce(cells['YOP'].value,'`None`'),coalesce(cells['Access_Type'].value,'`None`'),coalesce(cells['Access_Method'].value,'`None`'),coalesce(cells['Data_Type'].value,'`None`'),coalesce(cells['Section_Type'].value,'`None`')],']|[')",
        "onError": "keep-original",
        "newColumnName": "usageData",
        "columnInsertIndex": 20,
        "description": "Create column ``usageData`` combining the values of the following fields in the given order: ``Metric_Type``, ``Usage_Date``, ``Usage_Count``, ``YOP``, ``Access_Type``, ``Access_Method``, ``Data_Type``, ``Section_Type``"
    },
    {
        "op": "core/column-addition",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "baseColumnName": "Statistics_Source_ID",
        "expression": "join ([coalesce(cells['Publisher'].value,'`None`'),coalesce(cells['Publisher_ID'].value,'`None`'),coalesce(cells['Platform'].value,'`None`'),coalesce(cells['Proprietary_ID'].value,'`None`'),coalesce(cells['URI'].value,'`None`'),coalesce(cells['Publication_Date'].value,'`None`'),coalesce(cells['Article_Version'].value,'`None`'),coalesce(cells['Statistics_Source_ID'].value,'`None`')],']|[')",
        "onError": "keep-original",
        "newColumnName": "resourcePlatforms",
        "columnInsertIndex": 1,
        "description": "Create column ``resourcePlatforms`` combining the values of the following fields in the given order: ``Publisher``, ``Publisher_ID``, ``Platform``, ``Proprietary_ID``, ``URI``, ``Publication_Date``, ``Article_Version``, ``Statistics_Source_ID``"
    },
    {
        "op": "core/column-addition",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "baseColumnName": "Resource_Name",
        "expression": "join ([coalesce(cells['Resource_Name'].value,'`None`'),coalesce(cells['DOI'].value,'`None`'),coalesce(cells['ISBN'].value,'`None`'),coalesce(cells['Print_ISSN'].value,'`None`'),coalesce(cells['Online_ISSN'].value,'`None`'),coalesce(cells['Authors'].value,'`None`'),coalesce(cells['Parent_Title'].value,'`None`'),coalesce(cells['Parent_Authors'].value,'`None`'),coalesce(cells['Parent_Publication_Date'].value,'`None`'),coalesce(cells['Parent_Article_Version'].value,'`None`'),coalesce(cells['Parent_Data_Type'].value,'`None`'),coalesce(cells['Parent_DOI'].value,'`None`'),coalesce(cells['Parent_Proprietary_ID'].value,'`None`'),coalesce(cells['Parent_ISBN'].value,'`None`'),coalesce(cells['Parent_Print_ISSN'].value,'`None`'),coalesce(cells['Parent_Online_ISSN'].value,'`None`'),coalesce(cells['Parent_URI'].value,'`None`')],']|[')",
        "onError": "keep-original",
        "newColumnName": "resourceMetadata",
        "columnInsertIndex": 3,
        "description": "Create column ``resourceMetadata`` combining the values of the following fields in the given order: ``Resource_Name``, ``DOI``, ``ISBN``, ``Print_ISSN``, ``Online_ISSN``, ``Authors``, ``Parent_Title``, ``Parent_Authors``, ``Parent_Publication_Date``, ``Parent_Article_Version``, ``Parent_Data_Type``, ``Parent_DOI``, ``Parent_Proprietary_ID``, ``Parent_ISBN``, ``Parent_Print_ISSN``, ``Parent_Online_ISSN``, ``Parent_URI``"
    },
    {
        "op": "core/column-addition",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "baseColumnName": "Resource_Name",
        "expression": "join ([coalesce(cells['Resource_Name'].value,'`None`'),coalesce(cells['DOI'].value,'`None`'),coalesce(cells['dedupe_ISBN'].value,'`None`'),coalesce(cells['dedupe_Print_ISSN'].value,'`None`'),coalesce(cells['dedupe_Online_ISSN'].value,'`None`'),coalesce(cells['Authors'].value,'`None`'),coalesce(cells['Parent_Title'].value,'`None`'),coalesce(cells['Parent_Authors'].value,'`None`'),coalesce(cells['Parent_Publication_Date'].value,'`None`'),coalesce(cells['Parent_Article_Version'].value,'`None`'),coalesce(cells['Parent_Data_Type'].value,'`None`'),coalesce(cells['Parent_DOI'].value,'`None`'),coalesce(cells['Parent_Proprietary_ID'].value,'`None`'),coalesce(cells['Parent_ISBN'].value,'`None`'),coalesce(cells['Parent_Print_ISSN'].value,'`None`'),coalesce(cells['Parent_Online_ISSN'].value,'`None`'),coalesce(cells['Parent_URI'].value,'`None`')],']|[')",
        "onError": "keep-original",
        "newColumnName": "dedupe_resourceMetadata",
        "columnInsertIndex": 3,
        "description": "Create column ``dedupe_resourceMetadata`` combining the values of the following fields in the given order: ``Resource_Name``, ``DOI``, ``dedupe_ISBN``, ``dedupe_Print_ISSN``, ``dedupe_Online_ISSN``, ``Authors``, ``Parent_Title``, ``Parent_Authors``, ``Parent_Publication_Date``, ``Parent_Article_Version``, ``Parent_Data_Type``, ``Parent_DOI``, ``Parent_Proprietary_ID``, ``Parent_ISBN``, ``Parent_Print_ISSN``, ``Parent_Online_ISSN``, ``Parent_URI``"
    },
    {
        "op": "core/column-reorder",
        "columnNames": [
            "dedupe_resourceMetadata",
            "resourceMetadata",
            "usage_data_ID",
            "usageData",
            "resourcePlatforms"
        ],
        "description": "Reorder columns"
    },
    {
        "op": "core/column-addition",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "baseColumnName": "dedupe_resourceMetadata",
        "expression": "grel:if(length(value.split(\"]|[\"))==length(filter(value.split(\"]|[\"),value,value==\"`None`\")),cells.resourcePlatforms.value.split(\"]|[\")[2],value)",
        "onError": "set-to-blank",
        "newColumnName": "reorder_resourceMetadata",
        "columnInsertIndex": 0,
        "description": "Create column ``reorder_resourceMetadata`` with the value of column ``dedupe_resourceMetadata`` for non-platform resources and the name of the platform from platform resources"
    },
    {
        "op": "core/row-reorder",
        "mode": "row-based",
        "sorting": {
            "criteria": [
                {
                    "valueType": "string",
                    "column": "reorder_resourceMetadata",
                    "blankPosition": 2,
                    "errorPosition": 1,
                    "reverse": false,
                    "caseSensitive": false
                }
            ]
        },
        "description": "Reorder rows based on ``reorder_resourceMetadata``"
    },
    {
        "op": "core/blank-down",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "reorder_resourceMetadata",
        "description": "Blank down cells in column ``reorder_resourceMetadata``"
    },
    {
        "op": "core/multivalued-cell-join",
        "columnName": "resourcePlatforms",
        "keyColumnName": "reorder_resourceMetadata",
        "separator": "}|{",
        "description": "Combine all values in record in column ``resourcePlatforms`` in the first row of the record separated by `}|{`"
    },
    {
        "op": "core/multivalued-cell-join",
        "columnName": "usageData",
        "keyColumnName": "reorder_resourceMetadata",
        "separator": "}|{",
        "description": "Combine all values in record in column ``usageData`` in the first row of the record separated by `}|{`"
    },
    {
        "op": "core/multivalued-cell-join",
        "columnName": "usage_data_ID",
        "keyColumnName": "reorder_resourceMetadata",
        "separator": "}|{",
        "description": "Combine all values in record in column ``usage_data_ID`` in the first row of the record separated by `}|{`"
    },
    {
        "op": "core/row-removal",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "reorder_resourceMetadata",
                    "expression": "isBlank(value)",
                    "columnName": "reorder_resourceMetadata",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": true,
                                "l": "true"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "row-based"
        },
        "description": "Remove rows with no unique data"
    },
    {
        "op": "core/column-addition",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "baseColumnName": "reorder_resourceMetadata",
        "expression": "grel:row.record.index",
        "onError": "set-to-blank",
        "newColumnName": "temp_resource_ID_all",
        "columnInsertIndex": 1,
        "description": "Create column ``temp_resource_ID_all`` with record number"
    },
    {
        "op": "core/column-removal",
        "columnName": "reorder_resourceMetadata",
        "description": "Remove column ``reorder_resourceMetadata``"
    },
    {
        "op": "core/column-addition",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "baseColumnName": "dedupe_resourceMetadata",
        "expression": "grel:value.split(\"]|[\")[0]",
        "onError": "set-to-blank",
        "newColumnName": "reorder_resource_name",
        "columnInsertIndex": 0,
        "description": "Create column ``reorder_resource_name`` with resource name value"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "reorder_resource_name",
        "expression": "grel:if(value==\"`None`\",value+\"-\"+row.record.index,value)",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10,
        "description": "Add row number to null value placeholders in ``reorder_resource_name``"
    },
    {
        "op": "core/column-addition",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "baseColumnName": "dedupe_resourceMetadata",
        "expression": "grel:value.split(\"]|[\")[1]",
        "onError": "set-to-blank",
        "newColumnName": "reorder_DOI",
        "columnInsertIndex": 1,
        "description": "Create column ``reorder_DOI`` with DOI"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "reorder_DOI",
        "expression": "grel:if(value==\"`None`\",value+\"-\"+row.record.index,value)",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10,
        "description": "Add row number to null value placeholders in ``reorder_DOI``"
    },
    {
        "op": "core/column-addition",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "baseColumnName": "dedupe_resourceMetadata",
        "expression": "grel:value.split(\"]|[\")[2]",
        "onError": "set-to-blank",
        "newColumnName": "reorder_ISBN",
        "columnInsertIndex": 2,
        "description": "Create column ``reorder_ISBN`` with ISBN"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "reorder_ISBN",
        "expression": "grel:if(value==\"`None`\",value+\"-\"+row.record.index,value)",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10,
        "description": "Add row number to null value placeholders in ``reorder_ISBN``"
    },
    {
        "op": "core/column-addition",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "baseColumnName": "dedupe_resourceMetadata",
        "expression": "grel:value.split(\"]|[\")[3]",
        "onError": "set-to-blank",
        "newColumnName": "reorder_print_ISSN",
        "columnInsertIndex": 3,
        "description": "Create column ``reorder_print_ISSN`` with print ISSN"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "reorder_print_ISSN",
        "expression": "grel:if(value==\"`None`\",value+\"-\"+row.record.index,value)",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10,
        "description": "Add row number to null value placeholders in ``reorder_print_ISSN``"
    },
    {
        "op": "core/column-addition",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "baseColumnName": "dedupe_resourceMetadata",
        "expression": "grel:value.split(\"]|[\")[4]",
        "onError": "set-to-blank",
        "newColumnName": "reorder_online_ISSN",
        "columnInsertIndex": 4,
        "description": "Create column ``reorder_online_ISSN`` with online ISSN"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "reorder_online_ISSN",
        "expression": "grel:if(value==\"`None`\",value+\"-\"+row.record.index,value)",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10,
        "description": "Add row number to null value placeholders in ``reorder_online_ISSN``"
    },
    {
        "op": "core/row-reorder",
        "mode": "record-based",
        "sorting": {
            "criteria": [
                {
                    "valueType": "string",
                    "column": "reorder_resource_name",
                    "blankPosition": 2,
                    "errorPosition": 1,
                    "reverse": false,
                    "caseSensitive": false
                }
            ]
        },
        "description": "Reorder rows based on ``reorder_resource_name``"
    },
    {
        "op": "core/blank-down",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "reorder_resource_name",
        "description": "Blank down cells in column ``reorder_resource_name``"
    },
    {
        "op": "core/column-addition",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "baseColumnName": "reorder_resource_name",
        "expression": "grel:if(isNotNull(value.match(/(`None`\\-\\d*)/)[0]),cells.temp_resource_ID_all.value+\"-x\",row.record.index)",
        "onError": "set-to-blank",
        "newColumnName": "temp_resource_ID_name",
        "columnInsertIndex": 6,
        "description": "Create column ``temp_resource_ID_name`` with the record number for non-null values and the row's ``temp_resource_ID_all`` value followed by `-x` for null placeholder values"
    },
    {
        "op": "core/column-removal",
        "columnName": "reorder_resource_name",
        "description": "Remove column ``reorder_resource_name``"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "temp_resource_ID_name",
                    "expression": "grel:and(facetCount(value, 'value', 'temp_resource_ID_name') > 1,isNumeric(value))",
                    "columnName": "temp_resource_ID_name",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": false,
                                "l": "false"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "row-based"
        },
        "columnName": "temp_resource_ID_name",
        "expression": "grel:cells.temp_resource_ID_all.value+\"-x\"",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10,
        "description": "Change all values not representing matches in column ``temp_resource_ID_name`` to the row's ``temp_resource_ID_all`` value followed by `-x`"
    },
    {
        "op": "core/row-reorder",
        "mode": "record-based",
        "sorting": {
            "criteria": [
                {
                    "valueType": "string",
                    "column": "reorder_DOI",
                    "blankPosition": 2,
                    "errorPosition": 1,
                    "reverse": false,
                    "caseSensitive": false
                }
            ]
        },
        "description": "Reorder rows based on ``reorder_DOI``"
    },
    {
        "op": "core/blank-down",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "reorder_DOI",
        "description": "Blank down cells in column ``reorder_DOI``"
    },
    {
        "op": "core/column-addition",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "baseColumnName": "reorder_DOI",
        "expression": "grel:if(isNotNull(value.match(/(`None`\\-\\d*)/)[0]),cells.temp_resource_ID_all.value+\"-x\",row.record.index)",
        "onError": "set-to-blank",
        "newColumnName": "temp_resource_ID_DOI",
        "columnInsertIndex": 6,
        "description": "Create column ``temp_resource_ID_DOI`` with the record number for non-null values and the row's ``temp_resource_ID_all`` value followed by `-x` for null placeholder values"
    },
    {
        "op": "core/column-removal",
        "columnName": "reorder_DOI",
        "description": "Remove column ``reorder_DOI``"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "temp_resource_ID_DOI",
                    "expression": "grel:and(facetCount(value, 'value', 'temp_resource_ID_DOI') > 1,isNumeric(value))",
                    "columnName": "temp_resource_ID_DOI",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": false,
                                "l": "false"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "row-based"
        },
        "columnName": "temp_resource_ID_DOI",
        "expression": "grel:cells.temp_resource_ID_all.value+\"-x\"",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10,
        "description": "Change all values not representing matches in column ``temp_resource_ID_DOI`` to the row's ``temp_resource_ID_all`` value followed by `-x`"
    },
    {
        "op": "core/row-reorder",
        "mode": "record-based",
        "sorting": {
            "criteria": [
                {
                    "valueType": "string",
                    "column": "reorder_ISBN",
                    "blankPosition": 2,
                    "errorPosition": 1,
                    "reverse": false,
                    "caseSensitive": false
                }
            ]
        },
        "description": "Reorder rows based on ``reorder_ISBN``"
    },
    {
        "op": "core/blank-down",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "reorder_ISBN",
        "description": "Blank down cells in column ``reorder_ISBN``"
    },
    {
        "op": "core/column-addition",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "baseColumnName": "reorder_ISBN",
        "expression": "grel:if(isNotNull(value.match(/(`None`\\-\\d*)/)[0]),cells.temp_resource_ID_all.value+\"-x\",row.record.index)",
        "onError": "set-to-blank",
        "newColumnName": "temp_resource_ID_ISBN",
        "columnInsertIndex": 6,
        "description": "Create column ``temp_resource_ID_ISBN`` with the record number for non-null values and the row's ``temp_resource_ID_all`` value followed by `-x` for null placeholder values"
    },
    {
        "op": "core/column-removal",
        "columnName": "reorder_ISBN",
        "description": "Remove column ``reorder_ISBN``"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "temp_resource_ID_ISBN",
                    "expression": "grel:and(facetCount(value, 'value', 'temp_resource_ID_ISBN') > 1,isNumeric(value))",
                    "columnName": "temp_resource_ID_ISBN",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": false,
                                "l": "false"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "row-based"
        },
        "columnName": "temp_resource_ID_ISBN",
        "expression": "grel:cells.temp_resource_ID_all.value+\"-x\"",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10,
        "description": "Change all values not representing matches in column ``temp_resource_ID_ISBN`` to the row's ``temp_resource_ID_all`` value followed by `-x`"
    },
    {
        "op": "core/row-reorder",
        "mode": "record-based",
        "sorting": {
            "criteria": [
                {
                    "valueType": "string",
                    "column": "reorder_print_ISSN",
                    "blankPosition": 2,
                    "errorPosition": 1,
                    "reverse": false,
                    "caseSensitive": false
                }
            ]
        },
        "description": "Reorder rows based on ``reorder_print_ISSN``"
    },
    {
        "op": "core/blank-down",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "reorder_print_ISSN",
        "description": "Blank down cells in column ``reorder_print_ISSN``"
    },
    {
        "op": "core/column-addition",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "baseColumnName": "reorder_print_ISSN",
        "expression": "grel:if(isNotNull(value.match(/(`None`\\-\\d*)/)[0]),cells.temp_resource_ID_all.value+\"-x\",row.record.index)",
        "onError": "set-to-blank",
        "newColumnName": "temp_resource_ID_ISSN",
        "columnInsertIndex": 6,
        "description": "Create column ``temp_resource_ID_ISSN`` with the record number for non-null values and the row's ``temp_resource_ID_all`` value followed by `-x` for null placeholder values"
    },
    {
        "op": "core/column-removal",
        "columnName": "reorder_print_ISSN",
        "description": "Remove column ``reorder_print_ISSN``"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "temp_resource_ID_ISSN",
                    "expression": "grel:and(facetCount(value, 'value', 'temp_resource_ID_ISSN') > 1,isNumeric(value))",
                    "columnName": "temp_resource_ID_ISSN",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": false,
                                "l": "false"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "row-based"
        },
        "columnName": "temp_resource_ID_ISSN",
        "expression": "grel:cells.temp_resource_ID_all.value+\"-x\"",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10,
        "description": "Change all values not representing matches in column ``temp_resource_ID_ISSN`` to the row's ``temp_resource_ID_all`` value followed by `-x`"
    },
    {
        "op": "core/row-reorder",
        "mode": "record-based",
        "sorting": {
            "criteria": [
                {
                    "valueType": "string",
                    "column": "reorder_online_ISSN",
                    "blankPosition": 2,
                    "errorPosition": 1,
                    "reverse": false,
                    "caseSensitive": false
                }
            ]
        },
        "description": "Reorder rows based on ``reorder_online_ISSN``"
    },
    {
        "op": "core/blank-down",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "reorder_online_ISSN",
        "description": "Blank down cells in column ``reorder_online_ISSN``"
    },
    {
        "op": "core/column-addition",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "baseColumnName": "reorder_online_ISSN",
        "expression": "grel:if(isNotNull(value.match(/(`None`\\-\\d*)/)[0]),cells.temp_resource_ID_all.value+\"-x\",row.record.index)",
        "onError": "set-to-blank",
        "newColumnName": "temp_resource_ID_eISSN",
        "columnInsertIndex": 6,
        "description": "Create column ``temp_resource_ID_eISSN`` with the record number for non-null values and the row's ``temp_resource_ID_all`` value followed by `-x` for null placeholder values"
    },
    {
        "op": "core/column-removal",
        "columnName": "reorder_online_ISSN",
        "description": "Remove column ``reorder_online_ISSN``"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "temp_resource_ID_eISSN",
                    "expression": "grel:and(facetCount(value, 'value', 'temp_resource_ID_eISSN') > 1,isNumeric(value))",
                    "columnName": "temp_resource_ID_eISSN",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": false,
                                "l": "false"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "row-based"
        },
        "columnName": "temp_resource_ID_eISSN",
        "expression": "grel:cells.temp_resource_ID_all.value+\"-x\"",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10,
        "description": "Change all values not representing matches in column ``temp_resource_ID_eISSN`` to the row's ``temp_resource_ID_all`` value followed by `-x`"
    },
    {
        "op": "core/column-reorder",
        "columnNames": [
            "temp_resource_ID_DOI",
            "temp_resource_ID_ISBN",
            "temp_resource_ID_ISSN",
            "temp_resource_ID_eISSN",
            "temp_resource_ID_name",
            "temp_resource_ID_all",
            "dedupe_resourceMetadata",
            "resourceMetadata",
            "usage_data_ID",
            "usageData",
            "resourcePlatforms"
        ],
        "description": "Reorder columns"
    },
    {
        "op": "core/column-removal",
        "columnName": "temp_resource_ID_DOI",
        "description": "Because there aren't any duplicates to be found, remove column ``temp_resource_ID_DOI``"
    },
    {
        "op": "core/row-reorder",
        "mode": "row-based",
        "sorting": {
            "criteria": [
                {
                    "valueType": "number",
                    "column": "temp_resource_ID_ISBN",
                    "blankPosition": 2,
                    "errorPosition": 1,
                    "reverse": false
                }
            ]
        },
        "description": "Reorder rows based on ``temp_resource_ID_ISBN``"
    },
    {
        "op": "core/blank-down",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "temp_resource_ID_ISBN",
        "description": "Blank down cells in column ``temp_resource_ID_ISBN``"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "resourceMetadata",
                    "expression": "value",
                    "columnName": "resourceMetadata",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": "Encyclopedia of Philosophy 2nd ed. vol. 2]|[`None`]|[978-0-0286-6072-1]|[`None`]|[`None`]|[`None`]|[`None`]|[`None`]|[`None`]|[`None`]|[`None`]|[`None`]|[`None`]|[`None`]|[`None`]|[`None`]|[`None`",
                                "l": "Encyclopedia of Philosophy 2nd ed. vol. 2]|[`None`]|[978-0-0286-6072-1]|[`None`]|[`None`]|[`None`]|[`None`]|[`None`]|[`None`]|[`None`]|[`None`]|[`None`]|[`None`]|[`None`]|[`None`]|[`None`]|[`None`"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "row-based"
        },
        "columnName": "temp_resource_ID_ISBN",
        "expression": "grel:cells.temp_resource_ID_all.value+\"-x\"",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10,
        "description": "Change value in column ``temp_resource_ID_ISBN`` that doesn't belong in match to the row's ``temp_resource_ID_all`` value followed by `-x`"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "temp_resource_ID_ISBN",
                    "expression": "isBlank(value)",
                    "columnName": "temp_resource_ID_ISBN",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": true,
                                "l": "true"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "record-based"
        },
        "columnName": "temp_resource_ID_ISSN",
        "expression": "grel:if(length(filter(row.record.cells[\"temp_resource_ID_ISSN\"].value,v,isNumeric(v)))>1,if(length(filter(row.record.cells[\"temp_resource_ID_ISSN\"].value,v,v==row.record.cells[\"temp_resource_ID_ISSN\"].value[0]))==length(row.record.cells[\"temp_resource_ID_ISSN\"].value),if(row.index-row.record.fromRowIndex==0,row.record.cells[\"temp_resource_ID_ISSN\"].value[0],cells.temp_resource_ID_all.value+\"-x\"),if(row.index-row.record.fromRowIndex==0,forEach(row.record.cells[\"temp_resource_ID_ISSN\"].value,v,v).join(\"|\"),cells.temp_resource_ID_all.value+\"-x\")),if(and(length(filter(row.record.cells[\"temp_resource_ID_ISSN\"].value,v,isNumeric(v)))==1,row.index-row.record.fromRowIndex==0),filter(row.record.cells[\"temp_resource_ID_ISSN\"].value,v,isNumeric(v))[0],cells.temp_resource_ID_all.value+\"-x\"))",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10,
        "description": "If column ``temp_resource_ID_ISSN`` has numbers indicating a duplicate value, preserve them in the first row of the record; otherwise, change them to the row's ``temp_resource_ID_all`` value followed by `-x`"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "temp_resource_ID_ISBN",
                    "expression": "isBlank(value)",
                    "columnName": "temp_resource_ID_ISBN",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": true,
                                "l": "true"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "record-based"
        },
        "columnName": "temp_resource_ID_eISSN",
        "expression": "grel:if(length(filter(row.record.cells[\"temp_resource_ID_eISSN\"].value,v,isNumeric(v)))>1,if(length(filter(row.record.cells[\"temp_resource_ID_eISSN\"].value,v,v==row.record.cells[\"temp_resource_ID_eISSN\"].value[0]))==length(row.record.cells[\"temp_resource_ID_eISSN\"].value),if(row.index-row.record.fromRowIndex==0,row.record.cells[\"temp_resource_ID_eISSN\"].value[0],cells.temp_resource_ID_all.value+\"-x\"),if(row.index-row.record.fromRowIndex==0,forEach(row.record.cells[\"temp_resource_ID_eISSN\"].value,v,v).join(\"|\"),cells.temp_resource_ID_all.value+\"-x\")),if(and(length(filter(row.record.cells[\"temp_resource_ID_eISSN\"].value,v,isNumeric(v)))==1,row.index-row.record.fromRowIndex==0),filter(row.record.cells[\"temp_resource_ID_eISSN\"].value,v,isNumeric(v))[0],cells.temp_resource_ID_all.value+\"-x\"))",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10,
        "description": "If column ``temp_resource_ID_eISSN`` has numbers indicating a duplicate value, preserve them in the first row of the record; otherwise, change them to the row's ``temp_resource_ID_all`` value followed by `-x`"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "temp_resource_ID_ISBN",
                    "expression": "isBlank(value)",
                    "columnName": "temp_resource_ID_ISBN",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": true,
                                "l": "true"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "record-based"
        },
        "columnName": "temp_resource_ID_name",
        "expression": "grel:if(length(filter(row.record.cells[\"temp_resource_ID_name\"].value,v,isNumeric(v)))>1,if(length(filter(row.record.cells[\"temp_resource_ID_name\"].value,v,v==row.record.cells[\"temp_resource_ID_name\"].value[0]))==length(row.record.cells[\"temp_resource_ID_name\"].value),if(row.index-row.record.fromRowIndex==0,row.record.cells[\"temp_resource_ID_name\"].value[0],cells.temp_resource_ID_all.value+\"-x\"),if(row.index-row.record.fromRowIndex==0,forEach(row.record.cells[\"temp_resource_ID_name\"].value,v,v).join(\"|\"),cells.temp_resource_ID_all.value+\"-x\")),if(and(length(filter(row.record.cells[\"temp_resource_ID_name\"].value,v,isNumeric(v)))==1,row.index-row.record.fromRowIndex==0),filter(row.record.cells[\"temp_resource_ID_name\"].value,v,isNumeric(v))[0],cells.temp_resource_ID_all.value+\"-x\"))",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10,
        "description": "If column ``temp_resource_ID_name`` has numbers indicating a duplicate value, preserve them in the first row of the record; otherwise, change them to the row's ``temp_resource_ID_all`` value followed by `-x`"
    },
    {
        "op": "core/multivalued-cell-join",
        "columnName": "temp_resource_ID_all",
        "keyColumnName": "temp_resource_ID_ISBN",
        "separator": "}||{",
        "description": "Combine all values in record in column ``temp_resource_ID_all`` in the first row of the record separated by `}||{`"
    },
    {
        "op": "core/multivalued-cell-join",
        "columnName": "dedupe_resourceMetadata",
        "keyColumnName": "temp_resource_ID_ISBN",
        "separator": "}||{",
        "description": "Combine all values in record in column ``dedupe_resourceMetadata`` in the first row of the record separated by `}||{`"
    },
    {
        "op": "core/multivalued-cell-join",
        "columnName": "resourceMetadata",
        "keyColumnName": "temp_resource_ID_ISBN",
        "separator": "}||{",
        "description": "Combine all values in record in column ``resourceMetadata`` in the first row of the record separated by `}||{`"
    },
    {
        "op": "core/multivalued-cell-join",
        "columnName": "dedupe_resourceMetadata",
        "keyColumnName": "temp_resource_ID_ISBN",
        "separator": "}||{",
        "description": "Combine all values in record in column ``dedupe_resourceMetadata`` in the first row of the record separated by `}||{`"
    },
    {
        "op": "core/multivalued-cell-join",
        "columnName": "usage_data_ID",
        "keyColumnName": "temp_resource_ID_ISBN",
        "separator": "}||{",
        "description": "Combine all values in record in column ``usage_data_ID`` in the first row of the record separated by `}||{`"
    },
    {
        "op": "core/multivalued-cell-join",
        "columnName": "usageData",
        "keyColumnName": "temp_resource_ID_ISBN",
        "separator": "}||{",
        "description": "Combine all values in record in column ``usageData`` in the first row of the record separated by `}||{`"
    },
    {
        "op": "core/multivalued-cell-join",
        "columnName": "resourcePlatforms",
        "keyColumnName": "temp_resource_ID_ISBN",
        "separator": "}||{",
        "description": "Combine all values in record in column ``resourcePlatforms`` in the first row of the record separated by `}||{`"
    },
    {
        "op": "core/row-removal",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "temp_resource_ID_ISBN",
                    "expression": "isBlank(value)",
                    "columnName": "temp_resource_ID_ISBN",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": true,
                                "l": "true"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                },
                {
                    "type": "list",
                    "name": "temp_resource_ID_ISSN",
                    "expression": "grel:value.endsWith(\"-x\")",
                    "columnName": "temp_resource_ID_ISSN",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": true,
                                "l": "true"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                },
                {
                    "type": "list",
                    "name": "temp_resource_ID_eISSN",
                    "expression": "grel:value.endsWith(\"-x\")",
                    "columnName": "temp_resource_ID_eISSN",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": true,
                                "l": "true"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                },
                {
                    "type": "list",
                    "name": "temp_resource_ID_name",
                    "expression": "grel:value.endsWith(\"-x\")",
                    "columnName": "temp_resource_ID_name",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": true,
                                "l": "true"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "row-based"
        },
        "description": "Remove rows with no metadata"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "temp_resource_ID_ISBN",
                    "expression": "isBlank(value)",
                    "columnName": "temp_resource_ID_ISBN",
                    "invert": true,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": true,
                                "l": "true"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "record-based"
        },
        "columnName": "temp_resource_ID_ISBN",
        "expression": "grel:cells.temp_resource_ID_all.value+\"-x\"",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10,
        "description": "If column ``temp_resource_ID_ISBN`` doesn't have multiple records due to different ISSN, eISSN, or name IDs, change the value to the row's ``temp_resource_ID_all`` value followed by `-x`"
    },
    {
        "op": "core/column-reorder",
        "columnNames": [
            "temp_resource_ID_ISSN",
            "temp_resource_ID_eISSN",
            "temp_resource_ID_name",
            "temp_resource_ID_ISBN",
            "temp_resource_ID_all",
            "resourceMetadata",
            "dedupe_resourceMetadata",
            "usage_data_ID",
            "usageData",
            "resourcePlatforms"
        ],
        "description": "Reorder columns"
    },
    {
        "op": "core/row-reorder",
        "mode": "row-based",
        "sorting": {
            "criteria": [
                {
                    "valueType": "number",
                    "column": "temp_resource_ID_ISSN",
                    "blankPosition": 2,
                    "errorPosition": 1,
                    "reverse": false
                }
            ]
        },
        "description": "Reorder rows based on ``temp_resource_ID_ISSN``"
    },
    {
        "op": "core/blank-down",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "temp_resource_ID_ISSN",
        "description": "Blank down cells in column ``temp_resource_ID_ISSN``"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "temp_resource_ID_ISSN",
                    "expression": "isBlank(value)",
                    "columnName": "temp_resource_ID_ISSN",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": true,
                                "l": "true"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "record-based"
        },
        "columnName": "temp_resource_ID_eISSN",
        "expression": "grel:if(length(filter(row.record.cells[\"temp_resource_ID_eISSN\"].value,v,isNumeric(v)))>1,if(length(filter(row.record.cells[\"temp_resource_ID_eISSN\"].value,v,v==row.record.cells[\"temp_resource_ID_eISSN\"].value[0]))==length(row.record.cells[\"temp_resource_ID_eISSN\"].value),if(row.index-row.record.fromRowIndex==0,row.record.cells[\"temp_resource_ID_eISSN\"].value[0],cells.temp_resource_ID_all.value+\"-x\"),if(row.index-row.record.fromRowIndex==0,forEach(row.record.cells[\"temp_resource_ID_eISSN\"].value,v,v).join(\"|\"),cells.temp_resource_ID_all.value+\"-x\")),if(and(length(filter(row.record.cells[\"temp_resource_ID_eISSN\"].value,v,isNumeric(v)))==1,row.index-row.record.fromRowIndex==0),filter(row.record.cells[\"temp_resource_ID_eISSN\"].value,v,isNumeric(v))[0],cells.temp_resource_ID_all.value+\"-x\"))",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10,
        "description": "If column ``temp_resource_ID_eISSN`` has numbers indicating a duplicate value, preserve them in the first row of the record; otherwise, change them to the row's ``temp_resource_ID_all`` value followed by `-x`"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "temp_resource_ID_ISSN",
                    "expression": "isBlank(value)",
                    "columnName": "temp_resource_ID_ISSN",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": true,
                                "l": "true"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "record-based"
        },
        "columnName": "temp_resource_ID_name",
        "expression": "grel:if(length(filter(row.record.cells[\"temp_resource_ID_name\"].value,v,isNumeric(v)))>1,if(length(filter(row.record.cells[\"temp_resource_ID_name\"].value,v,v==row.record.cells[\"temp_resource_ID_name\"].value[0]))==length(row.record.cells[\"temp_resource_ID_name\"].value),if(row.index-row.record.fromRowIndex==0,row.record.cells[\"temp_resource_ID_name\"].value[0],cells.temp_resource_ID_all.value+\"-x\"),if(row.index-row.record.fromRowIndex==0,forEach(row.record.cells[\"temp_resource_ID_name\"].value,v,v).join(\"|\"),cells.temp_resource_ID_all.value+\"-x\")),if(and(length(filter(row.record.cells[\"temp_resource_ID_name\"].value,v,isNumeric(v)))==1,row.index-row.record.fromRowIndex==0),filter(row.record.cells[\"temp_resource_ID_name\"].value,v,isNumeric(v))[0],cells.temp_resource_ID_all.value+\"-x\"))",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10,
        "description": "If column ``temp_resource_ID_name`` has numbers indicating a duplicate value, preserve them in the first row of the record; otherwise, change them to the row's ``temp_resource_ID_all`` value followed by `-x`"
    },
    {
        "op": "core/multivalued-cell-join",
        "columnName": "temp_resource_ID_all",
        "keyColumnName": "temp_resource_ID_ISSN",
        "separator": "}|||{",
        "description": "Combine all values in record in column ``temp_resource_ID_all`` in the first row of the record separated by `}|||{`"
    },
    {
        "op": "core/multivalued-cell-join",
        "columnName": "dedupe_resourceMetadata",
        "keyColumnName": "temp_resource_ID_ISSN",
        "separator": "}|||{",
        "description": "Combine all values in record in column ``dedupe_resourceMetadata`` in the first row of the record separated by `}|||{`"
    },
    {
        "op": "core/multivalued-cell-join",
        "columnName": "resourceMetadata",
        "keyColumnName": "temp_resource_ID_ISSN",
        "separator": "}|||{",
        "description": "Combine all values in record in column ``resourceMetadata`` in the first row of the record separated by `}|||{`"
    },
    {
        "op": "core/multivalued-cell-join",
        "columnName": "dedupe_resourceMetadata",
        "keyColumnName": "temp_resource_ID_ISSN",
        "separator": "}|||{",
        "description": "Combine all values in record in column ``dedupe_resourceMetadata`` in the first row of the record separated by `}|||{`"
    },
    {
        "op": "core/multivalued-cell-join",
        "columnName": "usage_data_ID",
        "keyColumnName": "temp_resource_ID_ISSN",
        "separator": "}|||{",
        "description": "Combine all values in record in column ``usage_data_ID`` in the first row of the record separated by `}|||{`"
    },
    {
        "op": "core/multivalued-cell-join",
        "columnName": "usageData",
        "keyColumnName": "temp_resource_ID_ISSN",
        "separator": "}|||{",
        "description": "Combine all values in record in column ``usageData`` in the first row of the record separated by `}|||{`"
    },
    {
        "op": "core/multivalued-cell-join",
        "columnName": "resourcePlatforms",
        "keyColumnName": "temp_resource_ID_ISSN",
        "separator": "}|||{",
        "description": "Combine all values in record in column ``resourcePlatforms`` in the first row of the record separated by `}|||{`"
    },
    {
        "op": "core/row-removal",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "temp_resource_ID_ISSN",
                    "expression": "isBlank(value)",
                    "columnName": "temp_resource_ID_ISSN",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": true,
                                "l": "true"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                },
                {
                    "type": "list",
                    "name": "temp_resource_ID_eISSN",
                    "expression": "grel:value.endsWith(\"-x\")",
                    "columnName": "temp_resource_ID_eISSN",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": true,
                                "l": "true"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                },
                {
                    "type": "list",
                    "name": "temp_resource_ID_name",
                    "expression": "grel:value.endsWith(\"-x\")",
                    "columnName": "temp_resource_ID_name",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": true,
                                "l": "true"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "row-based"
        },
        "description": "Remove rows with no metadata"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "temp_resource_ID_ISSN",
                    "expression": "isBlank(value)",
                    "columnName": "temp_resource_ID_ISSN",
                    "invert": true,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": true,
                                "l": "true"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "record-based"
        },
        "columnName": "temp_resource_ID_ISSN",
        "expression": "grel:cells.temp_resource_ID_all.value+\"-x\"",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10,
        "description": "If column ``temp_resource_ID_ISSN`` doesn't have multiple records due to different eISSN or name IDs, change the value to the row's ``temp_resource_ID_all`` value followed by `-x`"
    },
    {
        "op": "core/column-reorder",
        "columnNames": [
            "temp_resource_ID_name",
            "temp_resource_ID_ISBN",
            "temp_resource_ID_ISSN",
            "temp_resource_ID_all",
            "resourceMetadata",
            "dedupe_resourceMetadata",
            "usage_data_ID",
            "usageData",
            "resourcePlatforms"
        ],
        "description": "Because there aren't any duplicates to be found, remove column ``temp_resource_ID_eISSN`` as part of reordering columns"
    },
    {
        "op": "core/row-reorder",
        "mode": "row-based",
        "sorting": {
            "criteria": [
                {
                    "valueType": "number",
                    "column": "temp_resource_ID_name",
                    "blankPosition": 2,
                    "errorPosition": 1,
                    "reverse": false
                }
            ]
        },
        "description": "Reorder rows based on ``temp_resource_ID_name``"
    },
    {
        "op": "core/blank-down",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "temp_resource_ID_name",
        "description": "Blank down cells in column ``temp_resource_ID_name``"
    },
    {
        "op": "core/multivalued-cell-join",
        "columnName": "temp_resource_ID_all",
        "keyColumnName": "temp_resource_ID_name",
        "separator": "}||||{",
        "description": "Combine all values in record in column ``temp_resource_ID_all`` in the first row of the record separated by `}||||{`"
    },
    {
        "op": "core/multivalued-cell-join",
        "columnName": "dedupe_resourceMetadata",
        "keyColumnName": "temp_resource_ID_name",
        "separator": "}||||{",
        "description": "Combine all values in record in column ``dedupe_resourceMetadata`` in the first row of the record separated by `}||||{`"
    },
    {
        "op": "core/multivalued-cell-join",
        "columnName": "resourceMetadata",
        "keyColumnName": "temp_resource_ID_name",
        "separator": "}||||{",
        "description": "Combine all values in record in column ``resourceMetadata`` in the first row of the record separated by `}||||{`"
    },
    {
        "op": "core/multivalued-cell-join",
        "columnName": "dedupe_resourceMetadata",
        "keyColumnName": "temp_resource_ID_name",
        "separator": "}||||{",
        "description": "Combine all values in record in column ``dedupe_resourceMetadata`` in the first row of the record separated by `}||||{`"
    },
    {
        "op": "core/multivalued-cell-join",
        "columnName": "usage_data_ID",
        "keyColumnName": "temp_resource_ID_name",
        "separator": "}||||{",
        "description": "Combine all values in record in column ``usage_data_ID`` in the first row of the record separated by `}||||{`"
    },
    {
        "op": "core/multivalued-cell-join",
        "columnName": "usageData",
        "keyColumnName": "temp_resource_ID_name",
        "separator": "}||||{",
        "description": "Combine all values in record in column ``usageData`` in the first row of the record separated by `}||||{`"
    },
    {
        "op": "core/multivalued-cell-join",
        "columnName": "resourcePlatforms",
        "keyColumnName": "temp_resource_ID_name",
        "separator": "}||||{",
        "description": "Combine all values in record in column ``resourcePlatforms`` in the first row of the record separated by `}||||{`"
    },
    {
        "op": "core/row-removal",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "temp_resource_ID_name",
                    "expression": "isBlank(value)",
                    "columnName": "temp_resource_ID_name",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": true,
                                "l": "true"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                },
                {
                    "type": "list",
                    "name": "temp_resource_ID_ISSN",
                    "expression": "grel:value.endsWith(\"-x\")",
                    "columnName": "temp_resource_ID_ISSN",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": true,
                                "l": "true"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                },
                {
                    "type": "list",
                    "name": "temp_resource_ID_ISBN",
                    "expression": "grel:value.endsWith(\"-x\")",
                    "columnName": "temp_resource_ID_ISBN",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": true,
                                "l": "true"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "row-based"
        },
        "description": "Remove rows with no metadata"
    },
    {
        "op": "core/column-reorder",
        "columnNames": [
            "usage_data_ID",
            "resourceMetadata",
            "resourcePlatforms",
            "usageData"
        ],
        "description": "Reorder columns"
    }
]